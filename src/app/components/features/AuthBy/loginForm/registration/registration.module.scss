@use "sass:math";
@use './src/app/styles/variable/global';
@use './src/app/styles/variable/globalIndex';
@use "./src/app/styles/mixins";
@use './src/app/styles/variable/common.scss';

.form {
  display: flex;
  flex-direction: column;
  row-gap: mixins.rem(25);
}

.title {
  @extend .popupTitle;
  position: relative;
  text-align: center;
}

.inputsForm {
  display: flex;
  flex-direction: column;
  row-gap: mixins.rem(15);
  position: relative;
}

.textInside{
  font-size: mixins.rem(14);
  @include mixins.adaptiveValue("font-size",globalIndex.$Enter_fontSize_AdaptiveStart,10,3,globalIndex.$Header_adaptive_start,globalIndex.$Header_adaptive_end);
}

.text{
  @extend .popupSubTitle;
  text-align: left;
}

.input {
  @extend .inputPopupLogin;
}


.inputRelative{
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: mixins.rem(5);
}


.error {
  color: red;
  font-size: mixins.rem(10);
  line-height: math.div(16,10);
  font-weight: 600;
  position: absolute;
  bottom: 0;
  left: mixins.rem(0);
  transform: translateY(100%);
}

.coverPasswordCheck{
  column-gap: mixins.rem(5);
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(60px, 1fr));
}

.hideButton {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translate(-15%, -50%);
  display: flex;
  align-items: center;
  justify-content: center;
}

.showSvg {
  fill: black;
  width: mixins.rem(30);
  height: mixins.rem(30);
}

.hideSvg {
  fill: black;
  width: mixins.rem(30);
  height: mixins.rem(30);
}

.btnEnter{
  @extend .btnGradient;
  font-weight: 600;
  padding-left: mixins.rem(27);
  padding-right: mixins.rem(27);
  padding-bottom: mixins.rem(11);
  padding-top: mixins.rem(11);
  @include mixins.adaptiveValue("font-size",globalIndex.$Enter_fontSize_AdaptiveStart,14,3,globalIndex.$Header_adaptive_start,globalIndex.$Header_adaptive_end);

  @media(max-width: mixins.em(global.$mobile)) {
    flex: 1 1 auto;
    min-width: 100%;
  }
}

  .back{
    @extend .btnBack;
    font-weight: 600;
    padding-left: mixins.rem(27);
    padding-right: mixins.rem(27);
    padding-bottom: mixins.rem(11);
    padding-top: mixins.rem(11);
    @include mixins.adaptiveValue("font-size",globalIndex.$Enter_fontSize_AdaptiveStart,14,3,globalIndex.$Header_adaptive_start,globalIndex.$Header_adaptive_end);

    @media(max-width: mixins.em(global.$mobile)) {
      flex: 1 1 auto;
      min-width: 100%;
    }
  }


.link {
  line-height: globalIndex.$main_font_line-height;
  font-size: mixins.rem(globalIndex.$main_font_size);
  color: white;
  display: flex;
  align-items: center;
  column-gap: mixins.rem(5);
  background-color: globalIndex.$Theme_main_header_background_button;
  border-radius: mixins.rem(10);
  padding-left: mixins.rem(65);
  padding-right: mixins.rem(65);
  flex: 1 1 auto;
  text-align: center;
  justify-content: center;
  padding-bottom: mixins.rem(8);
  padding-top: mixins.rem(8);
  transition: background-color ease 0.3s 0s, box-shadow ease 0.3s 0s;

  @media (any-hover: hover) {
    &:hover {
      background-color: globalIndex.$Theme_main_header_background_Button_hover;
      box-shadow: 0 0 5px globalIndex.$Theme_main_header_background_Button_hover;
      transition: background-color ease 0.3s 0s, box-shadow ease 0.3s 0s;
    }
  }
}

.btnCoverTwo {
  display: flex;
  column-gap: mixins.rem(20);
  justify-content: center;
  row-gap: mixins.rem(10);

  @media(max-width: mixins.em(global.$mobile)) {
    flex-direction: column;
  }
}

.coverPasswordCheck{
  column-gap: mixins.rem(5);
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(60px, 1fr));
}

.coverPassword{
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: mixins.rem(15);
  @include mixins.adaptiveValue("row-gap",15,10,3,global.$mobile,320);
}

.checkCover {

  display: flex;
  align-items: center;
  @media(min-width: mixins.em(400)) {
    font-size: mixins.rem(14);
    column-gap: mixins.rem(10);
  }

  @media(max-width: mixins.em(399)) {
    font-size: mixins.rem(11);
    column-gap: mixins.rem(5);
  }
}

.linkAcess {
  color: #C21F39;
  font-weight: 600;
  transition: color ease 0.3s 0s;
  @media (any-hover: hover) {
     &:hover {
       color: #e11010;
        transition: color ease 0.3s 0s;
     }
   }
}
